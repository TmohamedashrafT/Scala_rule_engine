[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ahmed\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ahmed\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.3 (Oracle Corporation Java 23.0.1)
[debug] Load.defaultLoad until apply took 231.2574ms
[debug]           Load.loadUnit: plugins took 149.9907ms
[debug]           Load.loadUnit: defsScala took 0.8038ms
[debug] [Loading] Scanning directory D:\iti\Scala_rule_engine\project
[debug]             Load.loadUnit: mkEval took 7.3296ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\iti\Scala_rule_engine\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.4193 ms
[info] loading settings for project scala_rule_engine-build from idea1.sbt ...
[debug]               Load.resolveProject(scala_rule_engine-build) took 71.673ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala_rule_engine-build, base: D:\iti\Scala_rule_engine\project, plugins: List(<none>))) took 131.9627ms
[debug] [Loading] Done in D:\iti\Scala_rule_engine\project, returning: (scala_rule_engine-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 728.8601ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.2221ms
[debug]         Load.loadUnit(file:/D:/iti/Scala_rule_engine/project/, ...) took 898.5644ms
[debug]       Load.apply: load took 1103.1029ms
[debug]       Load.apply: resolveProjects took 8.0851ms
[debug]       Load.apply: finalTransforms took 91.7493ms
[debug]       Load.apply: config.delegates took 14.7646ms
[debug]       Load.apply: Def.make(settings)... took 784.5439ms
[debug]       Load.apply: structureIndex took 180.4679ms
[debug]       Load.apply: mkStreams took 5.7664ms
[info] loading project definition from D:\iti\Scala_rule_engine\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4925.8356ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory D:\iti\Scala_rule_engine
[debug]       Load.loadUnit: mkEval took 0.2921ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.7228 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 52.9757ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\iti\Scala_rule_engine, plugins: List(<none>))) took 59.0351ms
[debug] [Loading] Done in D:\iti\Scala_rule_engine, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4924.2424ms
[debug]     Load.loadUnit: cleanEvalClasses took 26.5385ms
[debug]   Load.loadUnit(file:/D:/iti/Scala_rule_engine/, ...) took 9879.9677ms
[debug] Load.apply: load took 9934.6016ms
[debug] Load.apply: resolveProjects took 0.1473ms
[debug] Load.apply: finalTransforms took 52.0506ms
[debug] Load.apply: config.delegates took 0.5683ms
[debug] Load.apply: Def.make(settings)... took 112.8481ms
[debug] Load.apply: structureIndex took 34.1894ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to Scala_rule_engine (in build file:/D:/iti/Scala_rule_engine/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
